import ScheduleController from "../controllers/ScheduleController.js";
import log from "../logging/logging.js";
import TeacherController from "../controllers/TeacherController.js";

// done
export default function setupCommandHandlers(bot) {

    bot.onText(/^\/start$/, async (msg) => {
        await ScheduleController.startCommand(bot, msg)
            .catch(e => log.error("–í–ê–ñ–ù–û! –û–®–ò–ë–ö–ê –í –°–¢–ê–†–¢ –•–ï–ù–î–ï–†–ï!", {stack:e.stack, msg}))
    })

    bot.onText(/^\/schedule$/, async (msg) => {
        await ScheduleController.getSchedule(bot, msg)
            .catch(e => log.error("–í–ê–ñ–ù–û! –û–®–ò–ë–ö–ê –í –®–ï–î–£–õ –ö–û–ú–ê–ù–î –•–ï–î–õ–ï–†–ï", {stack:e.stack, msg}))
    })
    bot.onText(/^—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ$/i, async (msg) => {
        await ScheduleController.getSchedule(bot, msg)
            .catch(e => log.error("–í–ê–ñ–ù–û! –û–®–ò–ë–ö–ê –í –†–ê–°–ü–ò–°–ê–ù–ï –ö–û–ú–ê–ù–î –•–ï–î–õ–ï–†–ï", {stack:e.stack, msg}))

    });

    bot.onText(/^–ø—Ä–æ—Ñ–∏–ª—å(\s(\S{2,}))?$/i, async (msg, match) => {
        const surname = match[2];

        try {
            if (!surname) {
                await bot.sendMessage(msg.chat.id, '‚ö†Ô∏è –ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã "–ø—Ä–æ—Ñ–∏–ª—å" –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–∞ —Ñ–∞–º–∏–ª–∏—è.');
                return;
            }

            const answer = await bot.sendMessage(msg.chat.id, `ü™Ñ –ü—ã—Ç–∞—é—Å—å –Ω–∞–∫–æ–¥–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞ —Å —Ñ–∞–º–∏–ª–∏–µ–π: ${surname}. –í–∂—É—Ö!`, {parse_mode: 'html'});

            await TeacherController.findProfiles(bot, answer, surname);
        } catch (e) {
            log.error("–í–ê–ñ–ù–û! –û–®–ò–ë–ö–ê –í –ü–†–û–§–ò–õ–¨ –ö–û–ú–ê–ù–î –•–ï–î–õ–ï–†–ï", {stack:e.stack, msg})
        }
    });
    bot.onText(/^–ø—Ä–æ—Ñ–∏–ª—å\s(\S)$/i, async (msg) => {
        await bot.sendMessage(msg.chat.id, '‚ö†Ô∏è –§–∞–º–∏–ª–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –∏–∑ 2 —Å–∏–º–≤–æ–ª–æ–≤.')
            .catch(e => log.error("–í–ê–ñ–ù–û! –û–®–ò–ë–ö–ê –í –ü–†–û–§–ò–õ–¨ –ö–û–ú–ê–ù–î –•–ï–î–õ–ï–†–ï", {stack:e.stack, msg}))
    });

    bot.on('message', async (msg) => {
        log.silly(`User ${msg.chat.id} –Ω–∞–ø–∏—Å–∞–ª –≤ —á–∞—Ç: ${msg.text}`, {msg})
    });
}
