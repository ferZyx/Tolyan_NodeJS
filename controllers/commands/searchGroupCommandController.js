import log from "../../logging/logging.js";
import {bot} from "../../app.js";
import {commandAntiSpamMiddleware} from "../../middlewares/bot/commandAntiSpamMiddleware.js";
import GroupService from "../../services/groupService.js";
import ScheduleController from "../ScheduleController.js";
import SearchGroupController from "../SearchGroupController.js";

const errorCatch = async (e, msg) =>{
    log.error(`–í–ê–ñ–ù–û!User ${msg.chat.id}! –û–®–ò–ë–ö–ê –í searchGroupCommandController. –Æ–∑–µ—Ä—É —Å–∫–∞–∑–∞–Ω–æ —á—Ç–æ –±–æ—Ç –ø—Ä–∏–±–æ–µ–ª.` + e.message, {stack: e.stack, userId: msg.chat.id})
    bot.sendMessage(msg.chat.id, "‚ö†Ô∏è –ë–æ—Ç –Ω–µ–º–Ω–æ–∂–∫–æ –ø—Ä–∏–±–æ–ª–µ–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. ").catch(e => console.error(e))
}

export const searchGroupMenuCache = {}

export async function searchGroupCommandController(msg){
    await commandAntiSpamMiddleware(msg, async() => {
        try{
            const splittedText = msg.text.split(" ")

            let groupName = splittedText.slice(1).join(" ").replaceAll(" ", "-")

            if (!groupName || groupName.length<2){
                return await bot.sendMessage(msg.chat.id, '‚ö†Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –∏–∑ 2 —Å–∏–º–≤–æ–ª–æ–≤.')
            }

            groupName = splittedText.slice(1).join(" ").replaceAll(" ", "-")

            const groups = await GroupService.findByName(groupName)

            if (!groups.length){
                return await bot.sendMessage(msg.chat.id, `‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>${groupName}</b> –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n` +
                    `‚úçÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n` +
                    `–ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ –∏ —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ - –∑–Ω–∞—á–∏—Ç —Å–æ—Ä–∏ üôÉ`, {parse_mode:"HTML"})
            }

            searchGroupMenuCache[groupName] = {groups, time:Date.now()}

            const {data, page, page_count} = ScheduleController.configureMenuData(groups, 0)

            let markup = SearchGroupController.getMenuMarkup(data, groupName, page_count, page)

            await bot.sendMessage(msg.chat.id, `‚úÖ–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É: <b>${groupName}</b> –Ω–∞–π–¥–µ–Ω–æ ${groups.length} –≥—Ä—É–ø–ø!üôâ`, {reply_markup:markup, parse_mode:"HTML"})
        }catch (e) {
            await errorCatch();
        }
    })
}