import log from "../../logging/logging.js";
import {bot} from "../../app.js";
import {commandAntiSpamMiddleware} from "../../middlewares/bot/commandAntiSpamMiddleware.js";
import ScheduleController from "../ScheduleController.js";
import TeacherService from "../../services/teacherService.js";
import SearchTeacherController from "../SearchTeacherController.js";

const errorCatch = async (e, msg) => {
    log.error(`–í–ê–ñ–ù–û!User ${msg.chat.id}! –û–®–ò–ë–ö–ê –í searchTeacherCommandController. –Æ–∑–µ—Ä—É —Å–∫–∞–∑–∞–Ω–æ —á—Ç–æ –±–æ—Ç –ø—Ä–∏–±–æ–µ–ª.` + e.message, {
        stack: e.stack,
        userId: msg.chat.id
    })
    bot.sendMessage(msg.chat.id, "‚ö†Ô∏è –ë–æ—Ç –Ω–µ–º–Ω–æ–∂–∫–æ –ø—Ä–∏–±–æ–ª–µ–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. ").catch(e => console.error(e))
}

export const searchTeacherMenuCache = {}

export async function searchTeacherCommandController(msg) {
    await commandAntiSpamMiddleware(msg, async () => {
        try {
            const splittedText = msg.text.split(" ")

            let teacherName = ''

            if (!splittedText[1] || splittedText[1].length < 2) {
                return await bot.sendMessage(msg.chat.id, '‚ö†Ô∏è –ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –∏–∑ 2 —Å–∏–º–≤–æ–ª–æ–≤.')
            }

            teacherName = splittedText.slice(1).join(" ").replaceAll(" ", "-")

            const teachers = await TeacherService.findByName(teacherName)

            if (!teachers.length) {
                return await bot.sendMessage(msg.chat.id, `‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>${teacherName}</b> –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n` +
                    `‚úçÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n` +
                    `–ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ –∏ —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ - –∑–Ω–∞—á–∏—Ç —Å–æ—Ä–∏ üôÉ`, {parse_mode: "HTML"})
            }

            searchTeacherMenuCache[teacherName] = {teachers: teachers, time: Date.now()}

            const {data, page, page_count} = ScheduleController.configureMenuData(teachers, 0)

            let markup = SearchTeacherController.getMenuMarkup(data, teacherName, page_count, page)

            await bot.sendMessage(msg.chat.id, `‚úÖ–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É: <b>${teacherName}</b> –Ω–∞–π–¥–µ–Ω–æ ${teachers.length} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è!üôâ`, {
                reply_markup: markup,
                parse_mode: "HTML"
            })
        } catch (e) {
            await errorCatch();
        }
    })
}
