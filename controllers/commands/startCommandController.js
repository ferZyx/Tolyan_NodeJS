import userService from "../../services/userService.js";
import log from "../../logging/logging.js";

export async function startCommandController(bot, msg) {
    try {
        await bot.sendMessage(msg.chat.id, "üëã –ß—å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ?", {
            reply_markup: {
                inline_keyboard: [[{text: "ü§ì –°—Ç—É–¥–µ–Ω—Ç", callback_data: "faculty|0"}],
                    [{text: "üë©‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data: "department|0"}]]
            }
        })
    } catch (e) {
        log.error("–û–®–ò–ë–ö–ê –í startCommandController" + e.message, {stack:e.stack, userId: msg.chat.id})
        bot.sendMessage(msg.chat.id, "–ë–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. ").catch(e => console.error(e))
    }finally {
        await userService.registerUser(msg).catch(e => log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + e.message, {stack:e.stack, userId: msg.chat.id}))
    }
}

export async function redirectToStartMenu(bot, call){
    try {
        await bot.editMessageText("üëã –ß—å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ?", {
            chat_id:call.message.chat.id, message_id:call.message.message_id,
            reply_markup: {
                inline_keyboard: [[{text: "ü§ì –°—Ç—É–¥–µ–Ω—Ç", callback_data: "faculty|0"}],
                    [{text: "üë©‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data: "department|0"}]]
            }
        })
    } catch (e) {
        log.error("–û–®–ò–ë–ö–ê –í redirectToStartMenu" + e.message, {stack:e.stack, userId: call.message.chat.id})
    }finally {
        await userService.registerUser(call.message).catch(e => log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + e.message, {stack:e.stack, userId: call.message.chat.id}))
    }
}
