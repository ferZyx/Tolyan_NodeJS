import profileService from "../services/profileService.js";
import log from "../logging/logging.js";

class ProfileController {
    async findProfiles(bot, message, surname) {
        try {
            const teachers = await profileService.findByName(surname)
            if (!teachers.length) {
                await bot.editMessageText(`‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>${surname}</b> –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n` + `‚úçÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n` + `–ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ –∏ —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ - –∑–Ω–∞—á–∏—Ç —Å–æ—Ä–∏ üôÉ`, {
                    message_id: message.message_id, chat_id: message.chat.id, parse_mode: 'HTML'
                })
            } else {

                let markup = {
                    inline_keyboard: teachers.map((teacher) => [{
                        text: teacher.name, callback_data: `profile|${teacher._id}`
                    }])
                }

                await bot.editMessageText(`‚úÖ–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É: <b>${surname}</b> –Ω–∞–π–¥–µ–Ω–æ ${teachers.length} –ø—Ä–æ—Ñ–∏–ª–µ–π!üôâ`, {
                    message_id: message.message_id, chat_id: message.chat.id, parse_mode: 'HTML', reply_markup: markup
                })

            }
        } catch (e) {
            log.error(`User ${message.chat.id} get an error when was trying to get a teacher's profile`, {
                stack: e.stack, message
            });
            await bot.editMessageText('‚ö†Ô∏è –Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –Ω–æ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –Ω–∏–∫–æ–º—É –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–æ—á–∫–∞. –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —Ñ–∏–∫—Å–∏–∫–∏ —É–∂–µ –≤ –ø—É—Ç–∏. –ü—Ä–æ—Å—Ç–∏(', {
                chat_id: message.chat.id, message_id: message.message_id
            });
        }

    }

    async getProfile(bot, call, _id) {
        try {
            const teacher = await profileService.getById(_id)

            await bot.sendDocument(call.message.chat.id, teacher.href, {
                caption: `üë©‚ÄçüöÄ: ${teacher.name}\nüåè: ${teacher.faculty}\nüöÄ: ${teacher.department}`
            })
                .catch(async (e) => {
                    await bot.sendMessage(call.message.chat.id, `‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –æ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ—Ç —Å—Å—ã–ª–æ—á–∫–∞ –Ω–∞ –Ω–µ–≥–æ:\n${teacher.href}`)
                    log.warn(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –ß–µ–ª –Ω–µ –ø–æ—Å—Ç—Ä–∞–¥–∞–ª, –ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–æ—á–∫—É. –û—à–∏–±–∫–∞: ${e.message}`, {stack:e.stack})
                })

            await bot.deleteMessage(call.message.chat.id, call.message.message_id)
        } catch (e) {
            log.error(`User ${call.message.chat.id} got an error when was clicking to the teacher profile`, {
                stack: e.stack, call
            })
            await bot.editMessageText('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–æ—á–∫–∞. –§–∏–∫—Å–∏–∫–∏ —É–∂–µ –≤ –ø—É—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!', {
                chat_id: call.message.chat.id, message_id: call.message.message_id, reply_markup: {
                    inline_keyboard: [[{text: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data: call.data}]]
                }
            })
        }

    }
}

export default new ProfileController()